version: '3'

services:
  postgres:
    image: postgres:14-alpine
    container_name: smart-house-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=smarthouse
    volumes:
      - postgres_data:/var/lib/postgres/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: smart-house-api
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=smarthouse
      - DB_SSL_MODE=disable
      - API_PORT=8080
      - API_READ_TIMEOUT=10s
      - API_WRITE_TIMEOUT=10s
      - API_IDLE_TIMEOUT=60s

  collector:
    build:
      context: .
      dockerfile: Dockerfile.collector
    container_name: smart-house-collector
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "9090:9090"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=smarthouse
      - DB_SSL_MODE=disable

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: smart-house-bot
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "9091:9091"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=smarthouse
      - DB_SSL_MODE=disable
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - AUTHORIZED_USER_IDS=${AUTHORIZED_USER_IDS}
      - ALERT_CHECK_INTERVAL=1m
      - TEMPERATURE_ALERT_THRESHOLD=30

  emulator:
    build:
      context: .
      dockerfile: Dockerfile.emulator
    container_name: smart-house-emulator
    ports:
      - "9092:9092"

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: smart-house-prometheus
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9093:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.1.0
    container_name: smart-house-grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=smarthouse
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

volumes:
  postgres_data:
  prometheus_data:
  grafana_data: